<?xml version="1.0" encoding="UTF-8"?>
<Context>
	<!-- Coppied from the mtc missionary api on sept 20, 2013 -->
	<!-- Read more about context.xml here http://tomcat.apache.org/tomcat-7.0-doc/config/context.html -->
	<!-- Read more about jndi here: http://tomcat.apache.org/tomcat-7.0-doc/jndi-resources-howto.html -->
	
	<!-- Context Parameters -->
	<!-- Get these in java via String paramVal = getServletContext().getInitParameter("paramKey");-->
	<Parameter
		name="groupId"
		description="Maven Group ID"
		value="${pom.groupId}"
		override="false"/>
	<Parameter
		name="artifactId"
		description="Maven Artifact ID"
		value="${pom.artifactId}"
		override="false"/>
	<Parameter
		name="name"
		description="Maven Pom Name"
		value="${pom.name}"
		override="false"/>
	<Parameter
		name="version"
		description="Maven Pom Version"
		value="${pom.version}"
		override="false"/>

	<Resource 
		name="jdbc/SalesmanBuddyDB"
		auth="Container"
		type="javax.sql.DataSource"
		driverClassName="com.microsoft.sqlserver.jdbc.SQLServerDriver"
		factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory"
		initialSize="0"
		maxActive="100"
		maxIdle="10"
		minIdle="0"
		maxWait="-1"
		testOnBorrow="true"
		removeAbandoned="true"
		removeAbandonedTimeout="60"
		username="salesmanBuddy"
		password="salesmanbuddypw"
		url="jdbc:sqlserver://salesmanbudbeta.caedv57bvcse.us-west-2.rds.amazonaws.com:1433;databaseName=salesmanBuddy"
		useUnicode="true"
		validationQuery="SELECT 1"
		characterEncoding="utf-8"
		characterSetResults="utf-8"/>

	<!-- <Resource
		name="jdbc/mtcdb"
		auth="Container"
		driverClassName="oracle.jdbc.OracleDriver"
		initialSize="0"
		maxActive="15"
		maxIdle="3"
		minIdle="0"
		maxWait="-1"
		validationQuery="SELECT 1 FROM DUAL"
		testOnBorrow="true"
		testWhileIdle="true"
		removeAbandoned="true"
		removeAbandonedTimeout="60"
		type="javax.sql.DataSource"
		url="jdbc:oracle:thin:@mtcdb.mtc.byu.edu:1601:mtc1"
		username="xxxxx"
		password="xxxxxx"/> -->
		
	<!-- Environment Entries -->
	<!-- Get these in java via
		Context ctx = new InitialContext();
		ctx = (Context) ctx.lookup("java:comp/env");
		String theValue = (String) ctx.lookup("varName")); -->
	<!--<Environment
		name="aInteger"
		description="This is a integer value, passed via environment"
		override="false"
		type="java.lang.Integer"
		value="10"/>-->
		
	<!-- Custom Bean Singleton -->
	<!--<Resource
		name="aBean"
		description="Custom Bean Singleton"
		auth="Container"
		scope="Shareable"
		singleton="true"
		type="org.kuttingedge.Bean"
		closeMethod="close"
		aProp="1"/>-->
		
	<!--<Resource name="cassandraConnection" auth="Container"
            type="edu.byu.mtc.api.auth.daos.CassandraConnection"
            factory="org.apache.naming.factory.BeanFactory"
            contactPoint="localhost"
            keyspace="mtcauth"
			username="cassandra"
			password="cassandra"
			closeMethod="close"/>-->
		
	<!-- Custom Bean Factory -->
	<!-- <Resource
		name="bean/MyBeanFactory"
		auth="Container"
		type="com.mycompany.MyBean"
		factory="org.apache.naming.factory.BeanFactory"
		bar="23"/>-->

    <!-- Sometimes you want to connect to a RDMS, and have connections managed through a pool -->
    <!--<Resource
        name="jdbc/ECT"
        auth="Container"
        driverClassName="com.mysql.jdbc.Driver"
        initialSize="0"
        maxActive="15"
        maxIdle="3"
        minIdle="0"
        maxWait="-1"
        validationQuery="SELECT 1"
        testOnBorrow="true"
        removeAbandoned="true"
        removeAbandonedTimeout="60"
        username="user"
        password="password"
        type="javax.sql.DataSource"
        url="jdbc:mysql://host:3306/schema"/>-->
    
    <!-- You can also set up a per app security realm here if you'd like
    <Realm
        className="org.apache.catalina.realm.UserDatabaseRealm"
        resourceName="tomcat-users.xml"/> -->
</Context>
